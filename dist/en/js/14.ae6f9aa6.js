(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{407:function(t,e){t.exports="\x3c!--\ntitle: Template Introducation\nsort: 1\n--\x3e\n\n主题模板是ui的抽象表示，包括一系列组件和静态资源的集合，会在插件中被调用。在go-admin中的类型是```Template```，如下：\n\n```go\ntype Template interface {\n\t// Components\n\tForm() types.FormAttribute\n\tBox() types.BoxAttribute\n\tCol() types.ColAttribute\n\tImage() types.ImgAttribute\n\tSmallBox() types.SmallBoxAttribute\n\tLabel() types.LabelAttribute\n\tRow() types.RowAttribute\n\tTable() types.TableAttribute\n\tDataTable() types.DataTableAttribute\n\tTree() types.TreeAttribute\n\tInfoBox() types.InfoBoxAttribute\n\tPaginator() types.PaginatorAttribute\n\tAreaChart() types.AreaChartAttribute\n\tProgressGroup() types.ProgressGroupAttribute\n\tLineChart() types.LineChartAttribute\n\tBarChart() types.BarChartAttribute\n\tProductList() types.ProductListAttribute\n\tDescription() types.DescriptionAttribute\n\tAlert() types.AlertAttribute\n\tPieChart() types.PieChartAttribute\n\tChartLegend() types.ChartLegendAttribute\n\tTabs() types.TabsAttribute\n\tPopup() types.PopupAttribute\n\n\t// Builder methods\n\tGetTmplList() map[string]string\n\tGetAssetList() []string\n\tGetAsset(string) ([]byte, error)\n\tGetTemplate(bool) (*template.Template, string)\n}\n```\n\n如果需要开发一个ui主题模板，需要实现以上的```Template```接口。"}}]);